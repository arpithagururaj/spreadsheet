{"ast":null,"code":"import React from \"react\";\nexport default function Upload() {\n  const fileUpload = document.getElementById('fileUpload');\n  const regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n\n  if (regex.test(fileUpload.value.toLowerCase())) {\n    let fileName = fileUpload.files[0].name;\n\n    if (typeof FileReader !== 'undefined') {\n      const reader = new FileReader();\n\n      if (reader.readAsBinaryString) {\n        reader.onload = e => {\n          processExcel(reader.result);\n        };\n\n        reader.readAsBinaryString(fileUpload.files[0]);\n      }\n    } else {\n      console.log(\"This browser does not support HTML5.\");\n    }\n  } else {\n    console.log(\"Please upload a valid Excel file.\");\n  }\n}\n_c = Upload;\n\nfunction processExcel(data) {\n  const workbook = XLSX.read(data, {\n    type: 'binary'\n  });\n  const firstSheet = workbook.SheetNames[0];\n  const excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);\n  console.log(excelRows);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/arpitha/Desktop/8jan/src/App.js"],"names":["React","Upload","fileUpload","document","getElementById","regex","test","value","toLowerCase","fileName","files","name","FileReader","reader","readAsBinaryString","onload","e","processExcel","result","console","log","data","workbook","XLSX","read","type","firstSheet","SheetNames","excelRows","utils","sheet_to_row_object_array","Sheets"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,UAAU,GAAIC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;AACA,QAAMC,KAAK,GAAG,uCAAd;;AACA,MAAIA,KAAK,CAACC,IAAN,CAAWJ,UAAU,CAACK,KAAX,CAAiBC,WAAjB,EAAX,CAAJ,EAAgD;AAC5C,QAAIC,QAAQ,GAAGP,UAAU,CAACQ,KAAX,CAAiB,CAAjB,EAAoBC,IAAnC;;AACA,QAAI,OAAQC,UAAR,KAAwB,WAA5B,EAAyC;AACrC,YAAMC,MAAM,GAAG,IAAID,UAAJ,EAAf;;AACA,UAAIC,MAAM,CAACC,kBAAX,EAA+B;AAC3BD,QAAAA,MAAM,CAACE,MAAP,GAAiBC,CAAD,IAAO;AACnBC,UAAAA,YAAY,CAACJ,MAAM,CAACK,MAAR,CAAZ;AACH,SAFD;;AAGAL,QAAAA,MAAM,CAACC,kBAAP,CAA0BZ,UAAU,CAACQ,KAAX,CAAiB,CAAjB,CAA1B;AACH;AACJ,KARD,MAQO;AACHS,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AACJ,GAbD,MAaO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;AACF;KAnBuBnB,M;;AAqBxB,SAASgB,YAAT,CAAsBI,IAAtB,EAA4B;AAC1B,QAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUH,IAAV,EAAgB;AAACI,IAAAA,IAAI,EAAE;AAAP,GAAhB,CAAjB;AACA,QAAMC,UAAU,GAAGJ,QAAQ,CAACK,UAAT,CAAoB,CAApB,CAAnB;AACA,QAAMC,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAWC,yBAAX,CAAqCR,QAAQ,CAACS,MAAT,CAAgBL,UAAhB,CAArC,CAAlB;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAZ;AACD","sourcesContent":["import React from \"react\";\n\n\nexport default function Upload() {\n  const fileUpload = (document.getElementById('fileUpload'));\n  const regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n  if (regex.test(fileUpload.value.toLowerCase())) {\n      let fileName = fileUpload.files[0].name;\n      if (typeof (FileReader) !== 'undefined') {\n          const reader = new FileReader();\n          if (reader.readAsBinaryString) {\n              reader.onload = (e) => {\n                  processExcel(reader.result);\n              };\n              reader.readAsBinaryString(fileUpload.files[0]);\n          }\n      } else {\n          console.log(\"This browser does not support HTML5.\");\n      }\n  } else {\n      console.log(\"Please upload a valid Excel file.\");\n  }\n}\n\nfunction processExcel(data) {\n  const workbook = XLSX.read(data, {type: 'binary'});\n  const firstSheet = workbook.SheetNames[0];\n  const excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);\n\n  console.log(excelRows);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}