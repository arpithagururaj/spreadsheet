{"ast":null,"code":"import React from \"react\";\nimport XLSX from 'xlsx';\nexport default function Upload() {\n  const fileUpload = document.getElementById('fileUpload');\n  const regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n\n  if (regex.test(fileUpload.value.toLowerCase())) {\n    // let fileName = fileUpload.files[0].name;\n    if (typeof FileReader !== 'undefined') {\n      const reader = new FileReader();\n\n      if (reader.readAsBinaryString) {\n        reader.onload = e => {\n          processExcel(reader.result);\n        };\n\n        reader.readAsBinaryString(fileUpload.files[0]);\n      }\n    } else {\n      console.log(\"This browser does not support HTML5.\");\n    }\n  } else {\n    console.log(\"Please upload a valid Excel file.\");\n  } //   return (\n  // <html lang=\"en\">\n  // <head>\n  //     <title>Process Excel File</title>\n  //     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.0/xlsx.full.min.js\"></script>\n  // </head>\n  // <body>\n  // <input class=\"upload-excel\" type=\"file\" id=\"fileUpload\" onchange=\"Upload()\"/>\n  // </body>\n  // </html>\n  //   )\n\n}\n_c = Upload;\n\nfunction processExcel(data) {\n  const workbook = XLSX.read(data, {\n    type: 'binary'\n  });\n  const firstSheet = workbook.SheetNames[0];\n  const excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);\n  console.log(excelRows);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/arpitha/Desktop/8jan/src/App.js"],"names":["React","XLSX","Upload","fileUpload","document","getElementById","regex","test","value","toLowerCase","FileReader","reader","readAsBinaryString","onload","e","processExcel","result","files","console","log","data","workbook","read","type","firstSheet","SheetNames","excelRows","utils","sheet_to_row_object_array","Sheets"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,eAAe,SAASC,MAAT,GAAkB;AAE/B,QAAMC,UAAU,GAAIC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;AACA,QAAMC,KAAK,GAAG,uCAAd;;AACA,MAAIA,KAAK,CAACC,IAAN,CAAWJ,UAAU,CAACK,KAAX,CAAiBC,WAAjB,EAAX,CAAJ,EAAgD;AAC5C;AACA,QAAI,OAAQC,UAAR,KAAwB,WAA5B,EAAyC;AACrC,YAAMC,MAAM,GAAG,IAAID,UAAJ,EAAf;;AACA,UAAIC,MAAM,CAACC,kBAAX,EAA+B;AAC3BD,QAAAA,MAAM,CAACE,MAAP,GAAiBC,CAAD,IAAO;AACnBC,UAAAA,YAAY,CAACJ,MAAM,CAACK,MAAR,CAAZ;AACH,SAFD;;AAGAL,QAAAA,MAAM,CAACC,kBAAP,CAA0BT,UAAU,CAACc,KAAX,CAAiB,CAAjB,CAA1B;AACH;AACJ,KARD,MAQO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AACJ,GAbD,MAaO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,GAnB8B,CAoBjC;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;KAjCuBjB,M;;AAmCxB,SAASa,YAAT,CAAsBK,IAAtB,EAA4B;AAC1B,QAAMC,QAAQ,GAAGpB,IAAI,CAACqB,IAAL,CAAUF,IAAV,EAAgB;AAACG,IAAAA,IAAI,EAAE;AAAP,GAAhB,CAAjB;AACA,QAAMC,UAAU,GAAGH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAnB;AACA,QAAMC,SAAS,GAAGzB,IAAI,CAAC0B,KAAL,CAAWC,yBAAX,CAAqCP,QAAQ,CAACQ,MAAT,CAAgBL,UAAhB,CAArC,CAAlB;AAEAN,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACD","sourcesContent":["import React from \"react\";\nimport XLSX from 'xlsx';\n\n\nexport default function Upload() {\n  \n  const fileUpload = (document.getElementById('fileUpload'));\n  const regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n  if (regex.test(fileUpload.value.toLowerCase())) {\n      // let fileName = fileUpload.files[0].name;\n      if (typeof (FileReader) !== 'undefined') {\n          const reader = new FileReader();\n          if (reader.readAsBinaryString) {\n              reader.onload = (e) => {\n                  processExcel(reader.result);\n              };\n              reader.readAsBinaryString(fileUpload.files[0]);\n          }\n      } else {\n          console.log(\"This browser does not support HTML5.\");\n      }\n  } else {\n      console.log(\"Please upload a valid Excel file.\");\n  }\n//   return (\n    \n// <html lang=\"en\">\n// <head>\n   \n//     <title>Process Excel File</title>\n//     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.0/xlsx.full.min.js\"></script>\n// </head>\n// <body>\n// <input class=\"upload-excel\" type=\"file\" id=\"fileUpload\" onchange=\"Upload()\"/>\n// </body>\n// </html>\n//   )\n}\n\nfunction processExcel(data) {\n  const workbook = XLSX.read(data, {type: 'binary'});\n  const firstSheet = workbook.SheetNames[0];\n  const excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);\n\n  console.log(excelRows);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}